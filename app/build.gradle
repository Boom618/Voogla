apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def ZBConfig = rootProject.ext
static def releaseTime() {
    //return new Date().format("yyyy-MM-dd-HH.mm", TimeZone.getTimeZone("GMT+8"))
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("GMT+8"))
}
android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.ty.voogla"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        // 签名
        Release {
            storeFile file("../voogla.jks")
            storePassword "key0123"
            keyAlias "voogla"
            keyPassword "key0123"
        }
    }
    flavorDimensions "default"
    productFlavors {
        pda {
            versionCode 1
            versionName "1.0.0"
            signingConfig = signingConfigs.Release

            // buildConfigField: type name value
            buildConfigField "boolean", "isPhone", "false"
        }

        phone {
            versionCode 1
            versionName "1.0.0"
            signingConfig = signingConfigs.Release

            // buildConfigField: type name value
            buildConfigField "boolean", "isPhone", "true"
        }
    }
    buildTypes {
        release {
            // 混淆 依赖文件出错
            minifyEnabled false
            zipAlignEnabled true //内存对齐
            shrinkResources false //移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig null
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
        }
    }

    // 忽略打包警告
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        ignoreWarnings true
    }

    dexOptions {

        //此处可根据电脑本身配置 数值越大 当然越快
        javaMaxHeapSize "4g"

        preDexLibraries = false

    }
    applicationVariants.all {
        variant ->
            variant.outputs.all {
                outputFileName = "${variant.productFlavors[0].name}-v${variant.productFlavors[0].versionName}-${releaseTime()}.apk"
            }
    }
}

// 加@aar与不加@aar的区别：
// http://stackoverflow.com/questions/30157575/why-should-i-include-a-gradle-dependency-as-aar
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation "com.android.support:appcompat-v7:${ZBConfig.supportLibraryVersion}"
    implementation "com.android.support:design:${ZBConfig.supportLibraryVersion}"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // google EasyPermissions
    implementation 'pub.devrel:easypermissions:2.0.0'

    // dex 合并
    implementation 'com.android.support:multidex:1.0.3'
    // 二维码
    implementation('cn.yipianfengye.android:zxing-library:2.2') {
        exclude group: 'com.android.support'
    }

    //网络请求库
    implementation "com.squareup.okhttp3:okhttp:${ZBConfig.okhttp3Version}"
    implementation "com.squareup.retrofit2:retrofit:${ZBConfig.retrofit2Version}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${ZBConfig.retrofit2Version}"
    implementation "com.squareup.retrofit2:converter-gson:${ZBConfig.retrofit2Version}"

    //Gson解析
    implementation "com.google.code.gson:gson:${ZBConfig.googleGsonVersion}"
    // ch rome 浏览器：chrome://inspect
//    implementation 'com.facebook.stetho:stetho:1.5.1'
    //日志拦截器
    implementation "com.squareup.okhttp3:logging-interceptor:${ZBConfig.okhttp3Version}"

    //rxJava相关依赖
    implementation "io.reactivex.rxjava2:rxjava:${ZBConfig.rx2Version}"
    implementation "io.reactivex.rxjava2:rxandroid:${ZBConfig.rx2AndroidVersion}"

    // 时间选择框
    implementation "com.contrarywind:Android-PickerView:${ZBConfig.PickerViewVersion}"

    // TabLayout 库
    implementation "com.flyco.tablayout:FlycoTabLayout_Lib:${ZBConfig.tablayout_version}"
    // 单 Activity + 多 Fragment
    implementation 'me.yokeyword:fragmentation:1.3.6'

    // log
    implementation "com.orhanobut:logger:${ZBConfig.loggerVersion}"
    implementation 'com.github.zhaokaiqiang.klog:library:1.6.0'
    // toasty
    implementation 'com.github.GrenderG:Toasty:1.4.1'

    // progressbar
    //implementation "com.mikhaellopez:circularprogressbar:${ZBConfig.CircleProgressBarVersion}"

    //1.1.0 API改动过大，老用户升级需谨慎 listView 刷新 {ZBConfig.SmartRefreshVersion}
    implementation "com.scwang.smartrefresh:SmartRefreshLayout:${ZBConfig.SmartRefreshVersion}"

    //没有使用特殊 Header，可以不加这行
    implementation "com.scwang.smartrefresh:SmartRefreshHeader:${ZBConfig.SmartRefreshVersion}"

    // adapter
    implementation "com.zhy:base-rvadapter:${ZBConfig.rvadapterVersion}"
//    implementation project(":DataCollectionLib")
    implementation files('libs/ScanerLibrary V1.5.jar')

    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlin_version}"

    // NiceDialog
    implementation "com.github.SheHuan:NiceDialog:1.1.9"
    // image picker
//    implementation 'com.github.qingmei2:rximagepicker:2.2.0'
//    implementation 'com.github.qingmei2:rximagepicker_support_zhihu:2.2.0'

    // bugly 管理
    implementation "com.tencent.bugly:crashreport:${bugly_version}"

    // leak canary 内存检测
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${leakcanary_version}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${leakcanary_version}"
}
